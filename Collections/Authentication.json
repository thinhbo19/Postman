{
	"info": {
		"_postman_id": "64a448de-f4b4-4689-8b84-cd5a3864e3dc",
		"name": "Authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30293157"
	},
	"item": [
		{
			"name": "SignUp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {\r",
							"    const data = pm.response.json();\r",
							"    const newUserEmail = data.CreateUser.email;\r",
							"    const newPass = data.CreateUser.password;\r",
							"    pm.environment.set(\"newUserEmail\", newUserEmail);\r",
							"    pm.environment.set(\"newPass\", newPass);\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"    pm.test(\"Email: \" + newUserEmail + \" đăng ký thành công\", function () {\r",
							"        pm.expect(data).to.have.property(\"CreateUser\");\r",
							"    });\r",
							"}\r",
							"\r",
							"if (pm.response.code === 400) {\r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"        pm.response.to.have.status(400);\r",
							"    });\r",
							"    const data = pm.response.json();\r",
							"    if (data.msg === \"Email already exists\") {\r",
							"        pm.test(\"Email already exists\", function () {\r",
							"            pm.expect(data.msg).to.be.a(\"string\"); \r",
							"        });\r",
							"    }\r",
							"    else if(data.mes){\r",
							"         pm.test( data.mes, function () {\r",
							"            pm.expect(data.mes).to.be.a(\"string\"); \r",
							"        });\r",
							"    } \r",
							"    else if (data.errors && Array.isArray(data.errors)) {\r",
							"        const firstErrorMsg = data.errors[0].msg; \r",
							"       \r",
							"        pm.test(firstErrorMsg, function () {\r",
							"            pm.expect(firstErrorMsg).to.be.a(\"string\"); \r",
							"        });\r",
							"    }\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"Hưng Thịnh 1\",\r\n  \"phoneNumber\": \"0931205778\",\r\n  \"email\":\"@gmail.com\",\r\n  \"password\":\"123qwe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/registerTest",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"registerTest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"// Kiểm tra xem phản hồi có chứa token không\r",
							"if (pm.response.code === 200) {\r",
							"    // Lấy token từ phản hồi\r",
							"    const responseData = pm.response.json();\r",
							"    const accessToken = responseData.accessToken;\r",
							"    \r",
							"    // Set lại token trong biến môi trường của Postman\r",
							"    pm.environment.set(\"accessToken\", accessToken);\r",
							"    \r",
							"    // Kiểm tra thông báo đăng nhập thành công\r",
							"    pm.test(\"Đăng nhập thành công\", function () {\r",
							"        pm.expect(responseData).to.have.property(\"accessToken\");\r",
							"    });\r",
							"}\r",
							"\r",
							"\r",
							"if (pm.response.code === 400) {\r",
							"    pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"    const data = pm.response.json();\r",
							"    const firstErrorMsg = data.errors[0]?.msg; \r",
							"    if(pm.environment.get(\"newUserEmail\") === \"\"){\r",
							"        const firstErrorMsg = data.errors[0]?.msg; \r",
							"    \r",
							"        pm.test(\"Đăng ký thất bại nên không có email đăng nhập\", function () {\r",
							"            pm.expect(firstErrorMsg).to.be.a(\"string\"); \r",
							"        });\r",
							"    }else{\r",
							"        pm.test(firstErrorMsg, function () {\r",
							"            pm.expect(firstErrorMsg).to.be.a(\"string\"); \r",
							"        }); \r",
							"    }  \r",
							"}\r",
							"\r",
							" if (pm.response.code === 401) {\r",
							"    const data = pm.response.json();\r",
							"        pm.test(data.message, function () {\r",
							"            pm.expect(data.message).to.be.a(\"string\"); \r",
							"        });\r",
							"    } "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{newUserEmail}}\",\r\n  \"password\":\"{{newPass}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/loginTest",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"loginTest"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://shoesstore-backend-production.up.railway.app",
			"type": "string"
		}
	]
}